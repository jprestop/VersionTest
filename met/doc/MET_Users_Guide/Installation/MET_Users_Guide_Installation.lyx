#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Software Installation/Getting Started
\begin_inset CommandInset label
LatexCommand label
name "chap:Software-Installation/Getting-St"

\end_inset


\end_layout

\begin_layout Section
Introduction
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Introduction"

\end_inset


\end_layout

\begin_layout Standard

\series medium
This chapter describes how to install the MET package.
 MET has been developed and tested on Linux operating systems.
 Support for additional platforms and compilers may be added in future releases.
 The MET package requires many external libraries to be available on the
 user's computer prior to installation.
 Required and recommended libraries, how to install MET, the MET directory
 structure, and sample cases are described in the following sections.
 
\end_layout

\begin_layout Section
Supported architectures
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Supported-architectures"

\end_inset


\end_layout

\begin_layout Standard

\series medium
The MET package was developed on Debian Linux using the GNU compilers and
 the Portland Group (PGI) compilers.
 The MET package has also been built on several other Linux distributions
 using the GNU, PGI, and Intel compilers.
 Past versions of MET have also been ported to IBM machines using the IBM
 compilers, but we are currently unable to support this option as the developmen
t team lacks access to an IBM machine for testing.
 Other machines may be added to this list in future releases as they are
 tested.
 In particular, the goal is to support those architectures supported by
 the WRF model itself.
\end_layout

\begin_layout Standard

\series medium
The MET tools run on a single processor.
 Therefore, none of the utilities necessary for running WRF on multiple
 processors are necessary for running MET.
 Individual calls to the MET tools have relatively low computing and memory
 requirements.
 However users will likely be making many calls to the tools and passing
 those individual calls to several processors will accomplish the verification
 task more efficiently.
\end_layout

\begin_layout Section
Programming languages
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Programming-languages"

\end_inset


\end_layout

\begin_layout Standard

\series medium
The MET package, including MET-TC, is written primarily in C/C++ in order
 to be compatible with an extensive verification code base in C/C++ already
 in existence.
 In addition, the object-based MODE and MODE-TD verification tools relies
 heavily on the object-oriented aspects of C++.
 Knowledge of C/C++ is not necessary to use the MET package.
 The MET package has been designed to be highly configurable through the
 use of ASCII configuration files, enabling a great deal of flexibility
 without the need for source code modifications.
\end_layout

\begin_layout Standard

\series medium
NCEP's BUFRLIB is written entirely in Fortran.
 The portion of MET that handles the interface to the BUFRLIB for reading
 PrepBufr point observation files is also written in Fortran.
\end_layout

\begin_layout Standard

\series medium
The MET package is intended to be a tool for the modeling community to use
 and adapt.
 As users make upgrades and improvements to the tools, they are encouraged
 to offer those upgrades to the broader community by offering feedback to
 the developers.
 
\end_layout

\begin_layout Section
Required compilers and scripting languages
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Required-compilers-and"

\end_inset


\end_layout

\begin_layout Standard

\series medium
The MET package was developed and tested using the GNU g++/gfortran compilers,
 the Portland Group (PGI) pgCC or pgc++ and pgf90 compilers, and the Intel
 icc/ifort compilers.
 As additional compilers are successfully tested, they will be added to
 the list of supported platforms/compilers.
\end_layout

\begin_layout Standard

\series medium
The GNU make utility is used in building all executables and is therefore
 required.
\end_layout

\begin_layout Standard

\series medium
The MET package consists of a group of command line utilities that are compiled
 separately.
 The user may choose to run any subset of these utilities to employ the
 type of verification methods desired.
 New tools developed and added to the toolkit will be included as command
 line utilities.
\end_layout

\begin_layout Standard

\series medium
In order to control the desired flow through MET, users are encouraged to
 run the tools via a script.
 Some sample scripts are provided in the distribution; these examples are
 written in the Bourne shell.
 However, users are free to adapt these sample scripts to any scripting
 language desired.
\end_layout

\begin_layout Section
Required libraries and optional utilities
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Required-libraries-and"

\end_inset


\end_layout

\begin_layout Standard

\series medium
Three external libraries are required for compiling/building MET and should
 be downloaded and installed before attempting to install MET.
 Additional external libraries required for building advanced features in
 MET are discussed in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Installation-of-required"

\end_inset

 :
\end_layout

\begin_layout Description

\series medium
1.
 NCEP's BUFRLIB is used by MET to decode point-based observation datasets
 in PrepBufr format.
 BUFRLIB is distributed and supported by NCEP and is freely available for
 download from NCEP's website at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.emc.ncep.noaa.gov/index.php?branch=BUFRLIB
\end_layout

\end_inset

.
 BUFRLIB requires C and Fortran-90 compilers that should be from the same
 family of compilers used when building MET.
\end_layout

\begin_layout Description

\series medium
2.
 Several tools within MET use Unidata's NetCDF libraries for writing output
 NetCDF files.
 NetCDF libraries are distributed and supported by Unidata and are freely
 available for download from Unidata's website at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.unidata.ucar.edu/software/netcdf
\end_layout

\end_inset

.
 The same family of compilers used to build NetCDF should be used when building
 MET.
 MET is now compatible with the enhanced data model provided in NetCDF version
 4.
 The support for NetCDF version 4 requires HDF5 which is freely available
 for download at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://support.hdfgroup.org/HDF5/
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\series medium
3.
 The GNU Scientific Library (GSL) is used by MET when computing confidence
 intervals.
 GSL is distributed and supported by the GNU Software Foundation and is
 freely available for download from the GNU website at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.gnu.org/software/gsl
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Description

\series medium
4.
 The Zlib is used by MET for compression when writing postscript image files
 from tools (e.g.
 MODE, Wavelet-Stat, Plot-Data-Plane, and Plot-Point-Obs).
 Zlib is distributed and supported Zlib.org and is freely available for download
 from the Zlib website at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.zlib.net
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard

\series medium
Two additional utilities are strongly recommended for use with MET:
\end_layout

\begin_layout Description

\series medium
1.
 The Unified Post-Processor is recommended for post-processing the raw WRF
 model output prior to verifying the model forecasts with MET.
 The Unified Post-Processor is freely available for download 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://dtcenter.org/community-code/unified-post-processor-upp
\end_layout

\end_inset

.
 MET can read data on a standard, de-staggered grid and on pressure or regular
 levels in the vertical.
 The Unified Post-Processor outputs model data in this format from both
 WRF cores, the NMM and the ARW.
 However, the Unified Post-Processor is not strictly required as long as
 the user can produce gridded model output on a standard de-staggered grid
 on pressure or regular levels in the vertical.
 Two-dimensional fields (e.g., precipitation amount) are also accepted for
 some modules.
\end_layout

\begin_layout Description

\series medium
2.
 The copygb utility is recommended for re-gridding model and observation
 datasets in GRIB version 1 format to a common verification grid.
 The copygb utility is distributed as part of the Unified Post-Processor
 and is available from other sources as well.
 While earlier versions of MET required that all gridded data be placed
 on a common grid, MET version 5.1 added support for automated re-gridding
 on the fly.
 After version 5.1, users have the option of running copygb to regrid their
 GRIB1 data ahead of time or leveraging the automated regridding capability
 within MET.
 
\end_layout

\begin_layout Section
Installation of required libraries
\begin_inset CommandInset label
LatexCommand label
name "sec:Installation-of-required"

\end_inset


\end_layout

\begin_layout Standard

\series medium
As described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Install_Required-libraries-and"

\end_inset

, some external libraries are required for building the MET:
\end_layout

\begin_layout Description

\series medium
1.
 NCEP's BUFRLIB is used by the MET to decode point-based observation datasets
 in PrepBufr format.
 Once you have downloaded and unpacked the BUFRLIB tarball, refer to the
 README_BUFRLIB file.
 When compiling the library using the GNU C and Fortran compilers, users
 are strongly encouraged to use the -DUNDERSCORE and -fno-second-underscore
 options.
 Also, MET expects the BUFRLIB archive file to be named "libbufr.a".
 Therefore, compiling the BUFRLIB using the GNU compilers consists of the
 following 3 steps:
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\series medium
* gcc -c -DUNDERSCORE *.c
\end_layout

\begin_layout LyX-Code

\series medium
* gfortran -c -DUNDERSCORE -fno-second-underscore *.f *.F
\end_layout

\begin_layout LyX-Code

\series medium
* ar crv libbufr.a *.o
\end_layout

\end_deeper
\begin_layout Description

\series medium
Compiling the BUFRLIB using the PGI C and Fortran-90 compilers consists
 of the following 3 steps:
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\series medium
* pgcc -c -DUNDERSCORE *.c
\end_layout

\begin_layout LyX-Code

\series medium
* pgf90 -c -DUNDERSCORE -Mnosecond_underscore *.f *.F
\end_layout

\begin_layout LyX-Code

\series medium
* ar crv libbufr.a *.o
\end_layout

\end_deeper
\begin_layout Description

\series medium
Compiling the BUFRLIB using the Intel icc and ifort compilers consists of
 the following 3 steps:
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\series medium
* icc -c -DUNDERSCORE *.c
\end_layout

\begin_layout LyX-Code

\series medium
* ifort -c -DUNDERSCORE *.f *.F
\end_layout

\begin_layout LyX-Code

\series medium
* ar crv libbufr.a *.o
\end_layout

\end_deeper
\begin_layout Description

\series medium
2.
 Unidata's NetCDF libraries are used by several tools within MET for writing
 output NetCDF files.
 The same family of compilers used to build NetCDF should be used when building
 MET.
 Users may also find some utilities built for NetCDF such as ncdump and
 ncview useful for viewing the contents of NetCDF files.
 Detailed installation instructions are available from Unidata at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.unidata.ucar.edu/software/netcdf/docs/netcdf-install/
\end_layout

\end_inset

.
 Support for NetCDF version 4 requires HDF5.
 Detailed installation instructions for HDF5 are available at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://support.hdfgroup.org/HDF5/release/obtainsrc.html
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\series medium
3.
 The GNU Scientific Library (GSL) is used by MET for random sampling and
 normal and binomial distribution computations when estimating confidence
 intervals.
 Precompiled binary packages are available for most GNU/Linux distributions
 and may be installed with root access.
 When installing GSL from a precompiled package on Debian Linux, the developer's
 version of GSL must be used; otherwise, use the GSL version available from
 the GNU website (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.gnu.org/software/gsl/
\end_layout

\end_inset

).
 MET requires access to the GSL source headers and library archive file
 at build time.
 
\end_layout

\begin_layout Description

\series medium
4.
 For users wishing to compile MET with GRIB2 file support, NCEP's GRIB2
 Library in C (g2clib) must be installed, along with jasperlib, libpng,
 and zlib.
 (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.nco.ncep.noaa.gov/pmb/codes/GRIB2
\end_layout

\end_inset

).
 Please note that compiling the GRIB2C library with the 
\series bold
-D__64BIT__
\series medium
 option requires that MET also be configured with 
\series bold
CFLAGS="-D__64BIT__"
\series medium
.
 Compiling MET and the GRIB2C library inconsistently may result in a segmentatio
n fault when reading GRIB2 files.
 MET expects the GRIB2C library to be named libgrib2c.a, which may be set
 in the GRIB2C makefile as 
\series bold
LIB=libgrib2c.a.
\end_layout

\begin_layout Description

\series medium
5.
 Users wishing to compile MODIS-regrid and/or lidar2nc will need to install
 both the HDF4 and HDF-EOS2 libraries available from the HDF group websites
 (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.hdfgroup.org/products/hdf4
\end_layout

\end_inset

) and (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.hdfgroup.org/hdfeos.html
\end_layout

\end_inset

).
\end_layout

\begin_layout Description

\series medium
6.
 The MODE-Graphics utility requires Cairo and FreeType.
 Thus, users who wish to compile this utility must install both libraries,
 available from (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://cairographics.org/releases
\end_layout

\end_inset

) and (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.freetype.org/download.html
\end_layout

\end_inset

).
 In addition, users will need to download Ghostscript font data required
 at runtime (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://sourceforge.net/projects/gs-fonts
\end_layout

\end_inset

).
\end_layout

\begin_layout Section
Installation of optional utilities
\begin_inset CommandInset label
LatexCommand label
name "sec:Installation-of-optional"

\end_inset


\end_layout

\begin_layout Standard

\series medium
As described in the introduction to this chapter, two additional utilities
 are strongly recommended for use with MET.
\end_layout

\begin_layout Description

\series medium
1.
 The Unified Post-Processor is recommended for post-processing the raw WRF
 model output prior to verifying the data with MET.
 The Unified Post-Processor may be used on WRF output from both the ARW
 and NMM cores.
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://dtcenter.org/community-code/unified-post-processor-upp
\end_layout

\end_inset

 .
\end_layout

\begin_layout Description

\series medium
2.
 The copygb utility is recommended for re-gridding model and observation
 datasets in GRIB format to a common verification grid.
 The copygb utility is distributed as part of the Unified Post-Processor
 and is available from other sources as well.
 Please refer to the "Unified Post-processor" utility mentioned above for
 information on availability and installation.
\end_layout

\begin_layout Section
MET directory structure 
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_MET-directory-structure"

\end_inset


\end_layout

\begin_layout Standard

\series medium
The top-level MET directory consists of a README file, Makefiles, configuration
 files, and several subdirectories.
 The top-level Makefile and configuration files control how the entire toolkit
 is built.
 Instructions for using these files to build MET can be found in Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Install_Building-the-MET"

\end_inset

.
\end_layout

\begin_layout Standard

\series medium
When MET has been successfully built and installed, the installation directory
 contains two subdirectories.
 The bin/ directory contains executables for each module of MET as well
 as several plotting utilities.
 The share/met/ directory contains many subdirectories with data required
 at runtime and a subdirectory of sample R scripts utilities.
 The colortables/, map/, and ps/ subdirectories contain data used in creating
 PostScript plots for several MET tools.
 The poly/ subdirectory contains predefined lat/lon polyline regions for
 use in selecting regions over which to verify.
 The polylines defined correspond to verification regions used by NCEP as
 described in Appendix B.
 The config/ directory contains default configuration files for the MET
 tools.
 The table_files/ and tc_data/ subdirectories contain GRIB table definitions
 and tropical cyclone data, respectively.
 The Rscripts/ subdirectory contains a handful of plotting graphic utilities
 for MET-TC.
 These are the same Rscripts that reside under the top-level MET scripts/Rscript
s directory, other than it is the installed location.
\end_layout

\begin_layout Standard

\series medium
The data/ directory contains several configuration and static data files
 used by MET.
 The sample_fcst/ and sample_obs/ subdirectories contain sample data used
 by the test scripts provided in the scripts/ directory.
 
\end_layout

\begin_layout Standard

\series medium
The doc/ directory contains documentation for MET, including the MET User's
 Guide.
\end_layout

\begin_layout Standard

\series medium
The out/ directory will be populated with sample output from the test cases
 described in the next section.
 
\end_layout

\begin_layout Standard

\series medium
The src/ directory contains the source code for each of the tools in MET.
 
\end_layout

\begin_layout Standard

\series medium
The scripts/ directory contains test scripts that are run by make test after
 MET has been successfully built, and a directory of sample configuration
 files used in those tests located in the scripts/config/ subdirectory.
 The output from the test scripts in this directory will be written to the
 out/ directory.
 Users are encouraged to copy sample configuration files to another location
 and modify them for their own use.
\end_layout

\begin_layout Standard

\series medium
The 
\series default
share/met/Rscripts
\series medium
 directory contains a handful of sample R scripts, include 
\series bold
plot_tcmpr.R
\series default
, which provides graphic utilities for MET-TC.
 For more information on the graphics capabilities, see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:TC-Stat-tool-example"

\end_inset

 of this User's Guide.
\end_layout

\begin_layout Section
Building the MET package
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Building-the-MET"

\end_inset


\end_layout

\begin_layout Standard

\series medium
Building the MET package consists of three main steps: (1) install the required
 libraries, (2) configure the environment variables, and (3) configure and
 execute the build.
\end_layout

\begin_layout Standard

\series medium
Install the required libraries.
\end_layout

\begin_layout Itemize

\series medium
Please refer to Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Installation-of-required"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Installation-of-optional"

\end_inset

 on how to install the required and optional libraries.
\end_layout

\begin_layout Itemize
If installing the required and optional libraries in a non-standard location,
 the user may need to tell MET where to find them.
 This can be done by setting or adding to the LD_LIBRARY PATH to included
 the path to the library files.
\end_layout

\begin_layout Standard

\series bold
\bar under
Set Environment Variables
\end_layout

\begin_layout Standard

\series medium
The MET build uses environment variables to specify the locations of the
 needed external libraries.
 For each library, there is a set of three environment variables to describe
 the locations: $MET_<lib>, $MET_<lib>INC and $MET_<lib>LIB.
\end_layout

\begin_layout Standard

\series medium
The $MET_<lib> environment variable can be used if the external library
 is installed such that there is a main directory which has a subdirectory
 called "lib" containing the library files and another subdirectory called
 "include" containing the include files.
 For example, if the NetCDF library files are installed in /opt/netcdf/lib
 and the include files are in /opt/netcdf/include, you can just define the
 $MET_NETCDF environment variable to be "/opt/netcdf".
\end_layout

\begin_layout Standard

\series medium
The $MET_<lib>INC and $MET_<lib>LIB environment variables are used if the
 library and include files for an external library are installed in separate
 locations.
 In this case, both environment variables must be specified and the associated
 $MET_<lib> variable will be ignored.
 For example, if the NetCDF include files are installed in /opt/include/netcdf
 and the library files are in /opt/lib/netcdf, then you would set $MET_NETCDFINC
 to "/opt/include/netcdf" and $MET_NETCDFLIB to "/opt/lib/netcdf".
\end_layout

\begin_layout Standard
The following environment variables should also be set:
\end_layout

\begin_layout Standard

\series medium
- Set $MET_NETCDF to point to the main NetCDF directory, or set $MET_NETCDFINC
 to point to the directory with the NetCDF include files and set $MET_NETCDFLIB
 to point to the directory with the NetCDF library files.
\end_layout

\begin_layout Standard
- Set $MET_HDF5 to point to the main HDF5 directory.
\end_layout

\begin_layout Standard

\series medium
- Set $MET_BUFR to point to the main BUFR directory, or set $MET_BUFRLIB
 to point to the directory with the BUFR library files.
 Because we don't use any BUFR library include files, you don't need to
 specify $MET_BUFRINC.
\end_layout

\begin_layout Standard

\series medium
- Set $MET_GSL to point to the main GSL directory, or set $MET_GSLINC to
 point to the directory with the GSL include files and set $MET_GSLLIB to
 point to the directory with the GSL library files.
\end_layout

\begin_layout Standard

\series medium
- If compiling support for GRIB2, set $MET_GRIB2CINC and $MET_GRIB2CLIB
 to point to the main GRIB2C directory which contains both the include and
 library files.
 These are used instead of $MET_GRIB2C since the main GRIB2C directory does
 not contain include and lib subdirectories.
\end_layout

\begin_layout Standard
- If compiling support for PYTHON, set $MET_PYTHON_CC and $MET_PYTHON_LD
 to specify the compiler (-I) and linker (-L) flags required for python.
 Set $MET_PYTHON_CC for the directory containing the "Python.h" header file.
 Set $MET_PYTHON_LD for the directory containing the python library file
 and indicate the name of that file.
 For example:
\end_layout

\begin_layout Standard
MET_PYTHON_CC='-I/usr/include/python2.7'
\end_layout

\begin_layout Standard
MET_PYTHON_LD='-L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7'
\end_layout

\begin_layout Standard
For more information about Python support in MET, please refer to 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:App_F_Python_Embedding"

\end_inset

.
\end_layout

\begin_layout Standard

\series medium
- If compiling MODIS-Regrid and/or lidar2nc, set $MET_HDF to point to the
 main HDF4 directory, or set $MET_HDFINC to point to the directory with
 the HDF4 include files and set $MET_HDFLIB to point to the directory with
 the HDF4 library files.
 Also, set $MET_HDFEOS to point to the main HDF EOS directory, or set $MET_HDFEO
SINC to point to the directory with the HDF EOS include files and set $MET_HDFEO
SLIB to point to the directory with the HDF EOS library files.
\end_layout

\begin_layout Standard

\series medium
- If compiling MODE Graphics, set $MET_CAIRO to point to the main Cairo
 directory, or set $MET_CAIROINC to point to the directory with the Cairo
 include files and set $MET_CAIROLIB to point to the directory with the
 Cairo library files.
 Also, set $MET_FREETYPE to point to the main FreeType directory, or set
 $MET_FREETYPEINC to point to the directory with the FreeType include files
 and set $MET_FREETYPELIB to point to the directory with the FreeType library
 files.
\end_layout

\begin_layout Standard

\series medium
- When running MODE Graphics, set $MET_FONT_DIR to the directory containing
 font data required at runtime.
 A link to the tarball containing this font data can be found on the MET
 website.
\end_layout

\begin_layout Standard

\series medium
For ease of use, you should define these in your .cshrc or equivalent file.
\end_layout

\begin_layout Standard

\series bold
\bar under
Configure and execute the build
\end_layout

\begin_layout Standard
Example: 
\series medium
To configure MET to install all of the available tools in the "bin" subdirectory
 of your current directory, you would use the following commands:
\end_layout

\begin_layout LyX-Code

\series medium
1.
 ./configure --prefix=`pwd` --enable-grib2 --enable-python 
\backslash

\end_layout

\begin_layout LyX-Code

\series medium
               --enable-modis --enable-mode_graphics --enable-lidar2nc
\end_layout

\begin_layout LyX-Code

\series medium
2.
 Type 'make install >& make_install.log &'
\end_layout

\begin_layout LyX-Code

\series medium
3.
 Type 'tail -f make_install.log' to view the execution of the make.
\end_layout

\begin_layout LyX-Code

\series medium
4.
 When make is finished, type 'CNTRL-C' to quit the tail.
\end_layout

\begin_layout Standard

\series medium
If all tools are enabled and the build is successful, the "<prefix>/bin"
 directory (where <prefix> is the prefix you specified on your configure
 command line) will contain 31 executables:
\end_layout

\begin_layout LyX-Code

\series medium
- ascii2nc
\end_layout

\begin_layout LyX-Code

\series medium
- ensemble_stat
\end_layout

\begin_layout LyX-Code

\series medium
- gen_vx_mask
\end_layout

\begin_layout LyX-Code

\series medium
- grid_stat
\end_layout

\begin_layout LyX-Code
- gis_dump_dbf
\end_layout

\begin_layout LyX-Code
- gis_dump_shp
\end_layout

\begin_layout LyX-Code
- gis_dump_shx
\end_layout

\begin_layout LyX-Code
- gsid2mpr
\end_layout

\begin_layout LyX-Code
- gsidens2orank
\end_layout

\begin_layout LyX-Code
- lidar2nc
\end_layout

\begin_layout LyX-Code

\series medium
- madis2nc
\end_layout

\begin_layout LyX-Code

\series medium
- mode
\end_layout

\begin_layout LyX-Code

\series medium
- mode_analysis
\end_layout

\begin_layout LyX-Code

\series medium
- modis_regrid
\end_layout

\begin_layout LyX-Code
- mtd
\end_layout

\begin_layout LyX-Code

\series medium
- pb2nc
\end_layout

\begin_layout LyX-Code

\series medium
- pcp_combine
\end_layout

\begin_layout LyX-Code

\series medium
- plot_data_plane
\end_layout

\begin_layout LyX-Code

\series medium
- plot_mode_field
\end_layout

\begin_layout LyX-Code

\series medium
- plot_point_obs
\end_layout

\begin_layout LyX-Code

\series medium
- point_stat
\end_layout

\begin_layout LyX-Code
- regrid_data_plane
\end_layout

\begin_layout LyX-Code

\series medium
- series_analysis
\end_layout

\begin_layout LyX-Code
- shift_data_plane
\end_layout

\begin_layout LyX-Code

\series medium
- stat_analysis
\end_layout

\begin_layout LyX-Code

\series medium
- tc_dland
\end_layout

\begin_layout LyX-Code

\series medium
- tc_pairs
\end_layout

\begin_layout LyX-Code

\series medium
- tc_stat
\end_layout

\begin_layout LyX-Code

\series medium
- wavelet_stat
\end_layout

\begin_layout LyX-Code

\series medium
- wwmca_plot
\end_layout

\begin_layout LyX-Code

\series medium
- wwmca_regrid
\end_layout

\begin_layout Standard

\series medium
NOTE: Several compilation warnings may occur which are expected.
 If any errors occur, please refer to the appendix on troubleshooting for
 common problems.
 
\end_layout

\begin_layout Standard

\series bold
-help
\series default
 and 
\series bold
-version
\series default
 command line options are available for all of the MET tools.
 Typing the name of the tool with no command line options also produces
 the usage statement.
\end_layout

\begin_layout Standard

\series medium
The configure script has command line options to specify where to install
 MET and which MET utilities to install.
 Include any of the following options that apply to your system:
\end_layout

\begin_layout Standard

\series bold
–prefix=PREFIX
\end_layout

\begin_layout Standard

\series medium
By default, MET will install all the files in "/usr/local/bin".
 You can specify an installation prefix other than "/usr/local" using "–prefix",
 for instance "–prefix=$HOME" or "–prefix=`pwd`".
\end_layout

\begin_layout Standard

\series bold
–enable-grib2
\end_layout

\begin_layout Standard

\series medium
Enable compilation of utilities using GRIB2.
 Requires $MET_GRIB2C.
\end_layout

\begin_layout Standard

\series bold
--enable-python
\end_layout

\begin_layout Standard
Enable compilation of python interface.
 Requires $MET_PYTHON_CC and $MET_PYTHON_LD.
\end_layout

\begin_layout Standard

\series bold
–disable-block4
\end_layout

\begin_layout Standard

\series medium
Disable use of BLOCK4 in the compilation.
 Use this if you have trouble using PrepBufr files.
\end_layout

\begin_layout Standard

\series bold
–disable-ascii2nc
\end_layout

\begin_layout Standard

\series medium
Disable compilation of ascii2nc
\end_layout

\begin_layout Standard

\series bold
–disable-ensemble_stat
\end_layout

\begin_layout Standard

\series medium
Disable compilation of ensemble_stat
\end_layout

\begin_layout Standard

\series bold
–disable-gen_vx_mask
\end_layout

\begin_layout Standard

\series medium
Disable compilation of gen_vx_mask
\end_layout

\begin_layout Standard

\series bold
–disable-gis_utils
\end_layout

\begin_layout Standard

\series medium
Disable compilation of gis_dump_dbf, gis_dump_shp, and gis_dump_shx
\end_layout

\begin_layout Standard

\series bold
–disable-grid_stat
\end_layout

\begin_layout Standard

\series medium
Disable compilation of grid_stat
\end_layout

\begin_layout Standard

\series bold
–enable-lidar2nc
\end_layout

\begin_layout Standard

\series medium
Enable compilation of lidar2nc.
 Requires $MET_HDF.
\end_layout

\begin_layout Standard

\series bold
–disable-madis2nc
\end_layout

\begin_layout Standard

\series medium
Disable compilation of madis2nc
\end_layout

\begin_layout Standard

\series bold
–disable-mode
\end_layout

\begin_layout Standard

\series medium
Disable compilation of mode
\end_layout

\begin_layout Standard

\series bold
–disable-mode_analysis
\end_layout

\begin_layout Standard

\series medium
Disable compilation of mode_analysis
\end_layout

\begin_layout Standard

\series bold
–disable-pb2nc
\end_layout

\begin_layout Standard

\series medium
Disable compilation of pb2nc
\end_layout

\begin_layout Standard

\series bold
–disable-pcp_combine
\end_layout

\begin_layout Standard

\series medium
Disable compilation of pcp_combine
\end_layout

\begin_layout Standard

\series bold
–disable-plot_data_plane
\end_layout

\begin_layout Standard

\series medium
Disable compilation of plot_data_plane
\end_layout

\begin_layout Standard

\series bold
–disable-plot_data_plane
\end_layout

\begin_layout Standard

\series medium
Disable compilation of plot_data_plane
\end_layout

\begin_layout Standard

\series bold
–disable-regrid_data_plane
\end_layout

\begin_layout Standard

\series medium
Disable compilation of regrid_data_plane
\end_layout

\begin_layout Standard

\series bold
–disable-shift_data_plane
\end_layout

\begin_layout Standard

\series medium
Disable compilation of shift_data_plane
\end_layout

\begin_layout Standard

\series bold
–disable-plot_point_obs
\end_layout

\begin_layout Standard

\series medium
Disable compilation of plot_point_obs
\end_layout

\begin_layout Standard

\series bold
–disable-point_stat
\end_layout

\begin_layout Standard

\series medium
Disable compilation of point_stat
\end_layout

\begin_layout Standard

\series bold
–disable-stat_analysis
\end_layout

\begin_layout Standard

\series medium
Disable compilation of stat_analysis
\end_layout

\begin_layout Standard

\series bold
–disable-wavelet_stat
\end_layout

\begin_layout Standard

\series medium
Disable compilation of wavelet_stat
\end_layout

\begin_layout Standard

\series bold
–disable-series_analysis
\end_layout

\begin_layout Standard

\series medium
Disable compilation of series_analysis
\end_layout

\begin_layout Standard

\series bold
–disable-wwmca
\end_layout

\begin_layout Standard

\series medium
Disable compilation of wwmca
\end_layout

\begin_layout Standard

\series bold
–enable-modis
\end_layout

\begin_layout Standard

\series medium
Enable compilation of modis.
 Requires $MET_HDF and $MET_HDFEOS.
\end_layout

\begin_layout Standard

\series bold
–enable-mode_graphics
\end_layout

\begin_layout Standard

\series medium
Enable compilation of mode_graphics.
 Requires $MET_CARIO, $MET_FREETYPE, $MET_FONT_DIR.
\end_layout

\begin_layout Standard

\series bold
–disable-mode_time_domain
\end_layout

\begin_layout Standard

\series medium
Disable compilation of mode_time_domain
\end_layout

\begin_layout Standard

\series bold
–disable-tc_utils
\end_layout

\begin_layout Standard

\series medium
Disable compilation of tc_utils
\end_layout

\begin_layout Standard

\series bold
–disable-gsi_tools
\end_layout

\begin_layout Standard

\series medium
Disable compilation of gsi_tools
\end_layout

\begin_layout Standard

\series bold
\bar under
Make Targets
\end_layout

\begin_layout Standard

\series medium
The autoconf utility provides some standard make targets for the users.
 In MET, the following standard targets have been implemented and tested:
\end_layout

\begin_layout Description

\series medium
1.
 
\series bold
all
\series medium
 - compile all of the components in the package, but don't install them.
\end_layout

\begin_layout Description

\series medium
2.
 
\series bold
install
\series medium
 - install the components (where is described below).
 Will also compile if "make all" hasn't been done yet.
\end_layout

\begin_layout Description

\series medium
3.
 
\series bold
clean
\series medium
 - remove all of the temporary files created during the compilation.
\end_layout

\begin_layout Description

\series medium
4.
 
\series bold
uninstall
\series medium
 - remove the installed files.
 For us, these are the executables and the files in $MET_BASE.
\end_layout

\begin_layout Description

\series medium
MET also has the following non-standard targets:
\end_layout

\begin_layout Description

\series medium
5.
 
\series bold
test
\series medium
 - runs the scripts/test_all.sh script.
 You must run "make install" before using this target.
\end_layout

\begin_layout Section
Sample test cases
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Sample-test-cases"

\end_inset


\end_layout

\begin_layout Standard

\series medium
Once the MET package has been built successfully, the user is encouraged
 to run the sample test scripts provided.
 They are run using make test in the top-level directory.
 Execute the following commands:
\end_layout

\begin_layout Description

\series medium
1.
 Type 'make test >& make_test.log &' to run all of the test scripts in the
 directory.
 These test scripts use test data supplied with the tarball.
 For instructions on running your own data, please refer to the MET User's
 Guide.
\end_layout

\begin_layout Description

\series medium
2.
 Type 'tail -f make_test.log' to view the execution of the test script.
\end_layout

\begin_layout Description

\series medium
3.
 When the test script is finished, type 'CNTRL-C' to quit the tail.
 Look in "out" to find the output files for these tests.
 Each tool has a separate, appropriately named subdirectory for its output
 files.
 
\end_layout

\begin_layout Description

\series medium
4.
 In particular, check that the PB2NC tool ran without error.
 If there was an error, run "make clean" then rerun your configure command
 adding "–disable-block4" to your configure command line and rebuild MET.
\end_layout

\end_body
\end_document
